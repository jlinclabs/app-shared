{"mappings":"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","sources":["client-src/hooks/cqrpc.js","client-src/hooks/useAsync.js","client-src/hooks/useForceUpdate.js","shared/wait.js"],"sourcesContent":["// Command. Query. Remote. Procedure. Call\nimport { useEffect, useCallback } from 'react'\nimport useSWR from 'swr'\nimport useAsync from './useAsync'\nimport wait from '../../shared/wait.js'\n\nexport async function fetchQuery(name, options = {}){\n  const json = JSON.stringify(options)\n  const params = json === '{}' ? '' :\n    '?' + new URLSearchParams({ o: json })\n  return await apiFetch('GET', `/api/${name}${params}`)\n}\n\nexport async function fetchCommand(name, options){\n  return await apiFetch('POST', `/api/${name}`, options)\n}\n/**/\nglobal.cqrpc = {\n  query: fetchQuery,\n  command: fetchCommand,\n}\n\nasync function apiFetch(method, path, body, tries = 0){\n  const res = await fetch(path, {\n    method,\n    headers: {\n      'Accepts': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: body ? JSON.stringify(body) : undefined,\n  })\n  if (res.status === 502){\n    throw new Error(`API server looks down or you're offline`)\n  }\n  if (res.status === 504 && tries < 5) {\n    await wait(500)\n    return apiFetch(method, path, body, tries + 1)\n  }\n  const { result, error } = await res.json()\n  if (error) throw new Error(error.message)\n  return result || null\n}\n\nexport function useQuery(name, options = {}, config){\n  const swrKey = name ? [name, options] : null\n  const { data: result, error, mutate } = useSWR(swrKey, {\n    ...config,\n    fetcher: fetchQuery,\n  })\n  const loading = typeof result === 'undefined' && !error\n  const reload = useCallback(() => { mutate() }, [mutate])\n  return { result, loading, error, mutate, reload }\n}\n\nexport function useCommand(name, config){\n  return useAsync(\n    options => fetchCommand(name, options),\n    config\n  )\n}\n\nexport function useCommandOnMount(name, options, config){\n  const command = useCommand(name, config)\n  useEffect(\n    () => { if (command.idle) command.call(options) },\n    [name, options]\n  )\n  return command\n}\n","import * as React from 'react'\nimport { useRef, useMemo, useCallback, useEffect } from 'react'\nimport useForceUpdate from './useForceUpdate'\n\nconst STATES = ['idle', 'pending', 'resolved', 'rejected']\nexport default function useAsync(asyncFunction, config = {}){\n  const { callOnMount, onSuccess, onFailure, onComplete } = config\n  const callbacks = useRef()\n  Object.assign(callbacks, { onSuccess, onFailure, onComplete })\n  const forceUpdate = useForceUpdate()\n  const ctx = useMemo(() => ({}), [asyncFunction, callOnMount])\n\n  ctx.call = useCallback(\n    (...args) => {\n      if (ctx.promise) throw new Error(`already executing`)\n      const setState = state => {\n        ctx.state = STATES[state]\n        STATES.forEach((name, index) => {\n          ctx[name] = index === state\n        })\n        forceUpdate()\n      }\n      ctx.promise = new Promise((resolve, reject) => {\n        asyncFunction(...args).then(resolve, reject)\n      }).then(\n        async result => {\n          delete ctx.promise\n          ctx.result = result\n          setState(2)\n          if (callbacks.onSuccess) await callbacks.onSuccess(result)\n          return result\n        },\n        async error => {\n          delete ctx.promise\n          ctx.error = error\n          if (callbacks.onFailure) await callbacks.onFailure(error)\n          setState(3)\n          return error\n        },\n      ).then(async result => {\n        if (callbacks.onComplete) await callbacks.onComplete(result)\n      })\n      setState(1)\n      return ctx.promise\n    },\n    [ctx]\n  )\n\n  useEffect(\n    () => { if (callOnMount && ctx.idle) ctx.call() },\n    [ctx]\n  )\n\n  return ctx\n}\n","import { useState, useCallback, useEffect } from 'react'\n\nconst noop = () => {}\n\nexport default function useForceUpdate(){\n  let setState = useState()[1]\n  useEffect(() => () => { setState = noop }, [])\n  return useCallback(() => { setState({}) }, [])\n}\n","const wait = ms => new Promise(resolve => {\n  setTimeout(() => { resolve() }, ms)\n})\nexport default wait\n"],"names":[],"version":3,"file":"cqrpc.js.map","sourceRoot":"../../"}