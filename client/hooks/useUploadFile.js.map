{"mappings":"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","sources":["client-src/hooks/useUploadFile.js","client-src/hooks/useAsync.js","client-src/hooks/useForceUpdate.js","client-src/lib/uploads.js"],"sourcesContent":["import useAsync from './useAsync.js'\nimport { uploadFile } from '../lib/uploads.js'\n\nexport function useUploadFile(config){\n  return useAsync(uploadFile, config)\n}\n","import * as React from 'react'\nimport { useState, useCallback, useEffect } from 'react'\nimport useForceUpdate from './useForceUpdate'\n\nconst STATES = ['idle', 'pending', 'resolved', 'rejected']\nexport default function useAsync(asyncFunction, config = {}){\n  const { callOnMount, onSuccess, onFailure, onComplete } = config\n  const forceUpdate = useForceUpdate()\n  const [ctx] = useState({})\n\n  const setState = state => {\n    ctx.state = STATES[state]\n    STATES.forEach((name, index) => {\n      ctx[name] = index === state\n    })\n    forceUpdate()\n  }\n\n  if (ctx.state === undefined) setState(0)\n\n  ctx.call = useCallback(\n    (...args) => {\n      if (ctx.promise) throw new Error(`already executing`)\n      ctx.promise = new Promise((resolve, reject) => {\n        asyncFunction(...args).then(resolve, reject)\n      }).then(\n        async result => {\n          delete ctx.promise\n          ctx.result = result\n          setState(2)\n          if (onSuccess) await onSuccess(result)\n          return result\n        },\n        async error => {\n          delete ctx.promise\n          ctx.error = error\n          if (onFailure) await onFailure(error)\n          setState(3)\n          return error\n        },\n      ).then(result => {\n        if (onComplete) onComplete(result)\n      })\n      setState(1)\n      return ctx.promise\n    },\n    [asyncFunction]\n  )\n\n  useEffect(\n    () => { if (callOnMount && ctx.state === STATES['0']) ctx.call() },\n    [ctx.call, callOnMount, ctx.state]\n  )\n\n  return ctx\n}\n","import { useState, useCallback, useEffect } from 'react'\n\nconst noop = () => {}\n\nexport default function useForceUpdate(){\n  let setState = useState()[1]\n  useEffect(() => () => { setState = noop }, [])\n  return useCallback(() => { setState({}) }, [])\n}\n","export async function uploadFile(file){\n  const maxFileSize = uploadFile.MAX_FILE_SIZE_IN_MB || 200\n  if (!file) throw new Error(`file is required`)\n  if (file.size > (maxFileSize  * 1000000))\n    throw new Error(\n      `\"${file.name}\" is too big. Please select a file smaller ` +\n      `than ${maxFileSize}mb.`\n    )\n  const formData = new FormData()\n  formData.append('file', file)\n  const response = await fetch(\n    `/api/uploads`,\n    {method: 'POST', body: formData}\n  )\n  if (!response.ok){\n    throw new Error(`file upload failed ${response.statusCode}`)\n  }\n  const { error, url } = await response.json()\n  if (error) throw new Error(error)\n  return url\n}\nuploadFile.MAX_FILE_SIZE_IN_MB = 200"],"names":[],"version":3,"file":"useUploadFile.js.map","sourceRoot":"../../"}