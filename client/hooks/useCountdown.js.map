{"mappings":";;;;;;;;AAAA;;;;;;ACAA;AAEA,MAAM,0BAAI,GAAG,IAAM,EAAE;AAEN,oDAAyB;IACtC,IAAI,QAAQ,GAAG,CAAA,GAAA,eAAQ,CAAA,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAA,GAAA,gBAAS,CAAA,CAAC,IAAM,IAAM;YAAE,QAAQ,GAAG,0BAAI;SAAE,EAAE,EAAE,CAAC;IAC9C,OAAO,CAAA,GAAA,kBAAW,CAAA,CAAC,IAAM;QAAE,QAAQ,CAAC,EAAE,CAAC;KAAE,EAAE,EAAE,CAAC,CAAA;CAC/C;;;ADLc,kDAAsB,OAAO,EAAC;IAC3C,MAAM,WAAW,GAAG,CAAA,GAAA,wCAAc,CAAA,EAAE;IACpC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAA,GAAA,eAAQ,CAAA,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC;IAChD,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,AAAC,CAAA,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA,GAAI,IAAI,CAAC;IACjE,OAAO,CAAC,GAAG,CAAC;iBAAE,OAAO;iBAAE,OAAO;0BAAE,gBAAgB;KAAE,CAAC;IACnD,SAAS,CACP,IAAM;QACJ,MAAM,EAAE,GAAG,WAAW,CACpB,IAAM;YACJ,WAAW,EAAE;YACb,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,EAAI,aAAa,CAAC,EAAE,CAAC;SAC9C,EACD,GAAG,CACJ;QACD,OAAO,IAAM,aAAa,CAAC,EAAE,CAAC,CAAA;KAC/B,EACD;QAAC,OAAO;KAAC,CACV;IACD,OAAO,gBAAgB,CAAA;CACxB","sources":["client-src/hooks/useCountdown.js","client-src/hooks/useForceUpdate.js"],"sourcesContent":["import { useState } from 'react'\nimport useForceUpdate from './useForceUpdate.js'\n\nexport default function useCountdown(seconds){\n  const forceUpdate = useForceUpdate()\n  const [endTime] = useState(Date.now() + seconds)\n  const secondsRemaining = Math.ceil((endTime - Date.now()) / 1000)\n  console.log({ seconds, endTime, secondsRemaining })\n  useEffect(\n    () => {\n      const id = setInterval(\n        () => {\n          forceUpdate()\n          if (Date.now() > endTime) { clearInterval(id) }\n        },\n        100\n      )\n      return () => clearInterval(id)\n    },\n    [endTime]\n  )\n  return secondsRemaining\n}","import { useState, useCallback, useEffect } from 'react'\n\nconst noop = () => {}\n\nexport default function useForceUpdate(){\n  let setState = useState()[1]\n  useEffect(() => () => { setState = noop }, [])\n  return useCallback(() => { setState({}) }, [])\n}\n"],"names":[],"version":3,"file":"useCountdown.js.map","sourceRoot":"../../"}