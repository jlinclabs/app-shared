{"mappings":";;AAAA;AAEO,SAAS,0CAAW,IAAI,EAAE,SAAS,EAAC;IACzC,MAAM,QAAQ,CAAA,GAAA,kBAAW,AAAD,EAAE,CAAA,OAAQ;QAAE,UAAU,CAAC,CAAC;IAAM,GAAG;QAAC;KAAU;IACpE,MAAM,SAAS,CAAA,GAAA,kBAAU,EAAE,IAAM;QAAE,MAAM,IAAI;IAAE,GAAG;QAAC;KAAM;IACzD,MAAM,UAAU,CAAA,GAAA,kBAAU,EAAE,IAAM;QAAE;IAAQ,GAAG;QAAC;KAAM;IACtD,MAAM,SAAS,CAAA,GAAA,kBAAU,EAAE,IAAM;QAAE,MAAM,CAAC,OAAO,IAAI;IAAE,GAAG;QAAC;KAAM;IACjE,OAAO,IAAI,GAAG;IACd,OAAO;QAAC;QAAM;QAAQ;QAAS;QAAQ;KAAM;AAC/C;AAEe,kDAAmB,eAAe,KAAK,EAAC;IACrD,OAAO,6CAAc,CAAA,GAAA,eAAO,EAAE;AAChC","sources":["client-src/hooks/useToggle.js"],"sourcesContent":["import { useState, useCallback } from 'react'\n\nexport function _useToggle(isOn, _setValue){\n  const setOn = useCallback(isOn => { _setValue(!!isOn) }, [_setValue])\n  const turnOn = useCallback(() => { setOn(true) }, [setOn])\n  const turnOff = useCallback(() => { setOn() }, [setOn])\n  const toggle = useCallback(() => { setOn(!toggle.isOn) }, [setOn])\n  toggle.isOn = isOn\n  return [isOn, turnOn, turnOff, toggle, setOn]\n}\n\nexport default function useToggle(initialValue = false){\n  return _useToggle(...useState(initialValue))\n}\n"],"names":[],"version":3,"file":"useToggle.js.map","sourceRoot":"../../"}