{"mappings":";;AAAA;AAEO,SAAS,yCAAU,CAAC,IAAI,EAAE,SAAS,EAAC;IACzC,MAAM,KAAK,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,CAAA,IAAI,GAAI;QAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;KAAE,EAAE;QAAC,SAAS;KAAC,CAAC;IACrE,MAAM,MAAM,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,IAAM;QAAE,KAAK,CAAC,IAAI,CAAC;KAAE,EAAE;QAAC,KAAK;KAAC,CAAC;IAC1D,MAAM,OAAO,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,IAAM;QAAE,KAAK,EAAE;KAAE,EAAE;QAAC,KAAK;KAAC,CAAC;IACvD,MAAM,MAAM,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,IAAM;QAAE,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;KAAE,EAAE;QAAC,KAAK;KAAC,CAAC;IAClE,MAAM,CAAC,IAAI,GAAG,IAAI;IAClB,OAAO;QAAC,IAAI;QAAE,MAAM;QAAE,OAAO;QAAE,MAAM;QAAE,KAAK;KAAC,CAAA;CAC9C;AAEc,kDAAmB,YAAY,GAAG,KAAK,EAAC;IACrD,OAAO,yCAAU,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAA;CAC7C","sources":["client-src/hooks/useToggle.js"],"sourcesContent":["import { useCallback } from 'react'\n\nexport function _useToggle(isOn, _setValue){\n  const setOn = useCallback(isOn => { _setValue(!!isOn) }, [_setValue])\n  const turnOn = useCallback(() => { setOn(true) }, [setOn])\n  const turnOff = useCallback(() => { setOn() }, [setOn])\n  const toggle = useCallback(() => { setOn(!toggle.isOn) }, [setOn])\n  toggle.isOn = isOn\n  return [isOn, turnOn, turnOff, toggle, setOn]\n}\n\nexport default function useToggle(initialValue = false){\n  return _useToggle(...useState(initialValue))\n}\n"],"names":[],"version":3,"file":"useToggle.js.map","sourceRoot":"../../"}