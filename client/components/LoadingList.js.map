{"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;;;;AAIA,MAAM,2CAAO,kBAAiB,CAAC,EAAC,GAAG,OAAM,EAAE,MAAQ;IACjD,MAAM,SAAS,GAAG;IAClB,IAAI,MAAM,EAAE,EACV,MAAM,SAAS,GAAG,CAAA,GAAA,WAAS;IAE7B,IAAI,MAAM,EAAE,IAAI,MAAM,EAAE,CAAC,UAAU,CAAC,SAAQ;QAC1C,MAAM,IAAI,GAAG,MAAM,EAAE;QACrB,OAAO,MAAM,EAAE;QACf,MAAM,GAAG,GAAG,MAAM,GAAG,IAAI;QACzB,MAAM,MAAM,GAAG,MAAM,MAAM,IAAI;QAC/B,MAAM,SAAS,GAAG;IACpB,CAAC;IACD,qBAAO,gBAAC,CAAA,GAAA,sBAAO,AAAD;QAAG,GAAG,KAAK;QAAE,KAAK;;AAClC;AAEA,2BAAK,WAAW,GAAG;IAEnB,2CAAe;;;;;;;;ACrBf;;;AAGA,MAAM,qCAAe,CAAC,SAAC,MAAK,EAAE,GAAG,OAAM,GAAK;IAC1C,IAAI,CAAC,OAAO,OAAO,IAAI;IACvB,qBAAO,gBAAC,CAAA,GAAA,uBAAK,AAAD;QAAE,UAAS;QAAS,GAAG,KAAK;kBAAG,MAAM,OAAO;;AAC1D;IAEA,2CAAe;;;AFGA,kDAAqB,WAClC,QAAO,SACP,MAAK,WACL,QAAO,kBACP,iBAAiB,oBACjB,iBAAiB,qBACjB,gBAAgB,uBAChB,eAAe,CAAC,mBAAmB,CAAC,YACpC,wBAAU,gBAAC;cAAc;gBACzB,0BAAY,gBAAC;oBAAsB;oBAAgB;mBAAgB;KACpE,EAAC;IACA,qBAAO,gBAAC,CAAA,GAAA,sBAAI,AAAD;QAAE,SAAS;kBACpB,sBAAQ,gBAAC,CAAA,GAAA,wCAAY,AAAD;mBAAO;aAC3B,AAAC,CAAC,WAAW,UACT,QAAQ,MAAM,KAAK,IACjB,UACA,QAAQ,GAAG,CAAC,CAAC,GAAG,sBAAU,gBAAC;gBAAgB,KAAK;gBAAO,GAAG,CAAC;eAAK,GAClE,SAAS;;AAEjB;AAEA,SAAS,mCAAa,YAAE,SAAQ,EAAE,EAAE;IAClC,qBAAO,gBAAC,CAAA,GAAA,4BAAU,AAAD;QACf,IAAI;YAAC,WAAW;YAAU,WAAW;QAAQ;kBAC7C;;AACJ;AAEA,SAAS,iCAAW,QAAE,KAAI,QAAE,KAAI,QAAE,KAAI,WAAE,QAAO,EAAE,EAAC;IAChD,qBAAO,gBAAC,CAAA,GAAA,0BAAQ,AAAD;QAAE,cAAc;QAAC,IAAI;YAAC,IAAI;QAAC;kBACxC,cAAA,iBAAC,CAAA,GAAA,gCAAc,AAAD;YACZ,WAAW,OAAO,CAAA,GAAA,wCAAG,IAAI,SAAS;YAClC,IAAI;;gBAEH,sBAAQ,gBAAC,CAAA,GAAA,8BAAY,AAAD;8BAAG;;8BACxB,gBAAC,CAAA,GAAA,8BAAW;oBACV,SAAS;oBACT,WAAW;;;;;AAInB;AAEA,SAAS,sCAAgB,kBACvB,eAAc,kBAAE,eAAc,iBAAE,cAAa,EAC9C,EAAC;IACA,OAAO,MAAM,gBAAgB,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,kBAC1C,gBAAC,CAAA,GAAA,0BAAQ,AAAD;YAEN,SAAQ;YACR,QAAQ;YACR,OAAO;YACP,IAAI;gBAAC,IAAI;YAAC;WAJL;AAOX","sources":["client-src/components/LoadingList.js","client-src/components/Link.js","client-src/components/ErrorMessage.js"],"sourcesContent":["import Typography from '@mui/material/Typography'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Skeleton from '@mui/material/Skeleton'\n\nimport Link from '../components/Link'\nimport ErrorMessage from '../components/ErrorMessage'\n\nexport default function LoadingList({\n  loading,\n  error,\n  members,\n  skeletonLength = 4,\n  skeletonHeight = 118,\n  skeletonWidth = 'auto',\n  emptyMessage = `this list is empty.`,\n  onEmpty = <EmptyMessage>{emptyMessage}</EmptyMessage>,\n  onLoading = <SkeletonMembers {...{ skeletonLength, skeletonHeight, skeletonWidth }}/>,\n}){\n  return <List spacing={1}>{\n    error ? <ErrorMessage {...{error}}/> :\n    (!loading && members)\n      ? members.length === 0\n        ? onEmpty\n        : members.map((m, index) => <ListMember {...{key: index, ...m}}/>)\n      : onLoading\n  }</List>\n}\n\nfunction EmptyMessage({ children }) {\n  return <Typography\n    sx={{textAlign: 'center', fontStyle: 'italic'}}\n  >{children}</Typography>\n}\n\nfunction ListMember({ href, icon, text, subtext }){\n  return <ListItem disablePadding sx={{mb: 1}}>\n    <ListItemButton\n      component={href ? Link : undefined}\n      to={href}\n    >\n      {icon && <ListItemIcon>{icon}</ListItemIcon>}\n      <ListItemText\n        primary={text}\n        secondary={subtext}\n      />\n    </ListItemButton>\n  </ListItem>\n}\n\nfunction SkeletonMembers({\n  skeletonLength, skeletonHeight, skeletonWidth\n}){\n  return Array(skeletonLength).fill().map((_, i) =>\n    <Skeleton\n      key={i}\n      variant=\"rounded\"\n      height={skeletonHeight}\n      width={skeletonWidth}\n      sx={{mb: 1}}\n    />\n  )\n}","import * as React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport MUILink from '@mui/material/Link'\n\nconst Link = React.forwardRef(({...props}, ref) => {\n  props.component = 'a'\n  if (props.to){\n    props.component = RouterLink\n  }\n  if (props.to && props.to.startsWith('http')){\n    props.href = props.to\n    delete props.to\n    props.rel = props.rel || \"noopener noreferrer\"\n    props.target = props.target || \"_blank\"\n    props.component = 'a'\n  }\n  return <MUILink {...props} ref={ref}/>\n})\n\nLink.displayName = 'Link'\n\nexport default Link\n","import * as React from 'react'\nimport Alert from '@mui/material/Alert'\n\nconst ErrorMessage = ({error, ...props}) => {\n  if (!error) return null\n  return <Alert severity=\"error\" {...props}>{error.message}</Alert>\n}\n\nexport default ErrorMessage\n"],"names":[],"version":3,"file":"LoadingList.js.map","sourceRoot":"../../"}