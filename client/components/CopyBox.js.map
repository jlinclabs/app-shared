{"mappings":";;;;;;;;;;AAAA;;;;;;;;;ACAO,SAAS,yCAAQ,CAAC,IAAI,EAAC;IAC5B,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;CACpC;;;ADMc,kDAAiB,SAC9B,KAAK,CAAA,cACL,UAAU,CAAA,aACV,SAAS,CAAA,EACT,GAAG,KAAK,EACT,EAAC;IACA,MAAM,IAAI,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,IAAM;QAAE,CAAA,GAAA,yCAAQ,CAAA,CAAC,KAAK,CAAC;KAAE,EAAE,EAAE,CAAC;IACvD,MAAM,SAAS,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,CAAA,CAAC,GAAI;QACjC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,MAAM,CAAC;KACtC,EAAE,EAAE,CAAC;IACN,MAAM,OAAO,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,CAAA,CAAC,GAAI;QAC/B,SAAS,CAAC,CAAC,CAAC;KACb,EAAE,EAAE,CAAC;IACN,MAAM,WAAW,GAAG,CAAA,GAAA,kBAAW,CAAA,CAAC,CAAA,CAAC,GAAI;QACnC,CAAC,CAAC,cAAc,EAAE;QAClB,SAAS,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE;QAChB,OAAO,KAAK,CAAA;KACb,EAAE,EAAE,CAAC;IAGN,qBAAO,iBAAC,CAAA,GAAA,uBAAK,CAAA;QAAC,SAAS,EAAC,KAAK;QAAC,OAAO,EAAE,CAAC;QAAG,GAAG,KAAK;;0BACjD,gBAAC,CAAA,GAAA,2BAAS,CAAA;gBACR,SAAS,EAAE,IAAI;gBACf,GAAG,UAAU;gBACb,EAAE,EAAE;oBACF,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,KAAK;oBACX,GAAG,UAAU,EAAE,EAAE;iBAClB;uBACD,KAAK;gBACL,QAAQ,EAAE,IAAI;yBACd,OAAO;6BACP,WAAW;cACT;0BACJ,gBAAC,CAAA,GAAA,4BAAU,CAAA;gBAAC,OAAO,EAAE,IAAI;gBAAE,EAAE,EAAE;oBAAC,OAAO,EAAE,MAAM;oBAAE,KAAK,EAAE,MAAM;iBAAC;0BAC7D,cAAA,gBAAC,CAAA,GAAA,kCAAe,CAAA;oBAAE,GAAG,SAAS;kBAAG;cACtB;;MACP,CAAA;CACT","sources":["client-src/components/CopyBox.js","client-src/lib/clipboard.js"],"sourcesContent":["import { useCallback } from 'react'\nimport Stack from '@mui/material/Stack'\nimport TextField from '@mui/material/TextField'\nimport IconButton from '@mui/material/IconButton'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\n\nimport { copyText } from '../lib/clipboard.js'\n\nexport default function CopyBox({\n  value,\n  inputProps,\n  iconProps,\n  ...props\n}){\n  const copy = useCallback(() => { copyText(value) }, [])\n  const selectAll = useCallback(e => {\n    e.target.setSelectionRange(0, 999999)\n  }, [])\n  const onFocus = useCallback(e => {\n    selectAll(e)\n  }, [])\n  const onMouseDown = useCallback(e => {\n    e.preventDefault()\n    selectAll(e)\n    e.target.focus()\n    return false\n  }, [])\n\n\n  return <Stack direction=\"row\" spacing={1} {...props}>\n    <TextField {...{\n      fullWidth: true,\n      ...inputProps,\n      sx: {\n        width: 'auto',\n        flex: '1 1',\n        ...inputProps?.sx,\n      },\n      value,\n      readOnly: true,\n      onFocus,\n      onMouseDown,\n    }}/>\n    <IconButton onClick={copy} sx={{display: 'flex', width: '56px'}}>\n      <ContentCopyIcon {...iconProps}/>\n    </IconButton>\n  </Stack>\n}","export function copyText(text){\n  navigator.clipboard.writeText(text)\n}\n"],"names":[],"version":3,"file":"CopyBox.js.map","sourceRoot":"../../"}